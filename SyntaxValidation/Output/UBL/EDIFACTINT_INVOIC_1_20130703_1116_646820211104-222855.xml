<?xml version="1.0" encoding="UTF-8"?>
<svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                        xmlns:error="https://doi.org/10.5281/zenodo.1495494#error"
                        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                        xmlns:schxslt-api="https://doi.org/10.5281/zenodo.1495494#api"
                        xmlns:schxslt="https://doi.org/10.5281/zenodo.1495494"
                        xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"
                        xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"
                        xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                        xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDataTypes-2"
                        xmlns:udt="urn:oasis:names:specification:ubl:schema:xsd:UnqualifiedDataTypes-2"
                        xmlns:cn="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2"
                        xmlns:ubl="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2">
   <svrl:ns-prefix-in-attribute-values prefix="ext"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="cbc"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="cac"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="qdt"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDataTypes-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="udt"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:UnqualifiedDataTypes-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="cn"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:CreditNote-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="ubl"
                                       uri="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"/>
   <svrl:ns-prefix-in-attribute-values prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/>
   <svrl:metadata xmlns:dct="http://purl.org/dc/terms/"
                  xmlns:skos="http://www.w3.org/2004/02/skos/core#">
      <dct:creator>
         <dct:Agent>
            <skos:prefLabel>SAXON/HE 9.9.1.5</skos:prefLabel>
         </dct:Agent>
      </dct:creator>
      <dct:created>2021-11-04T22:28:55.865+11:00</dct:created>
      <dct:source>
         <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/">
            <dct:creator>
               <dct:Agent>
                  <skos:prefLabel>SchXslt/1.8.2 SAXON/HE 9.9.1.5</skos:prefLabel>
                  <schxslt.compile.typed-variables xmlns="https://doi.org/10.5281/zenodo.1495494#">true</schxslt.compile.typed-variables>
               </dct:Agent>
            </dct:creator>
            <dct:created>2021-09-22T11:48:47.996+10:00</dct:created>
         </rdf:Description>
      </dct:source>
   </svrl:metadata>
   <svrl:active-pattern id="UBL-model"
                        documents="file:///C:/Users/Sunil/CAPSTONE/Class/XML/UBL//EDIFACTINT_INVOIC_1_20130703_1116_6468.ubl"/>
   <svrl:fired-rule context="/ubl:Invoice | /cn:CreditNote"/>
   <svrl:failed-assert location="/Q{urn:oasis:names:specification:ubl:schema:xsd:Invoice-2}Invoice[1]"
                       flag="fatal"
                       id="BR-CO-15-AUNZ"
                       test="every $Currency in cbc:DocumentCurrencyCode satisfies (count(//cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) eq 1) and (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = round( (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) * 10 * 10) div 100)">
      <svrl:text>[BR-CO-15-AUNZ]-Invoice total amount with tax (BT-112) = Invoice total amount without tax (BT-109) + Invoice total tax amount (BT-110).</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="cac:AccountingSupplierParty/cac:Party/cbc:EndpointID"/>
   <svrl:fired-rule context="cac:AccountingSupplierParty/cac:Party/cac:PostalAddress"/>
   <svrl:fired-rule context="cac:AccountingCustomerParty/cac:Party/cbc:EndpointID"/>
   <svrl:fired-rule context="cac:AccountingCustomerParty/cac:Party/cac:PostalAddress"/>
   <svrl:fired-rule context="cac:TaxRepresentativeParty"/>
   <svrl:fired-rule context="cac:TaxRepresentativeParty/cac:PostalAddress"/>
   <svrl:fired-rule context="cac:Delivery/cac:DeliveryLocation/cac:Address"/>
   <svrl:fired-rule context="/ubl:Invoice/cac:TaxTotal | /cn:CreditNote/cac:TaxTotal"/>
   <svrl:fired-rule context="cac:TaxTotal/cac:TaxSubtotal"/>
   <svrl:fired-rule context="/*/cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory[normalize-space(cbc:ID) = 'S'][cac:TaxScheme/normalize-space(upper-case(cbc:ID))='GST']"/>
   <svrl:fired-rule context="cac:LegalMonetaryTotal"/>
   <svrl:failed-assert location="/Q{urn:oasis:names:specification:ubl:schema:xsd:Invoice-2}Invoice[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}LegalMonetaryTotal[1]"
                       flag="fatal"
                       id="BR-DEC-14-AUNZ"
                       test="string-length(substring-after(cbc:TaxInclusiveAmount,'.'))&lt;=2">
      <svrl:text>[BR-DEC-14-AUNZ]-The allowed maximum number of decimals for the Invoice total amount with tax (BT-112) is 2.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert location="/Q{urn:oasis:names:specification:ubl:schema:xsd:Invoice-2}Invoice[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}LegalMonetaryTotal[1]"
                       flag="fatal"
                       id="BR-DEC-18"
                       test="string-length(substring-after(cbc:PayableAmount,'.'))&lt;=2">
      <svrl:text>[BR-DEC-18]-The allowed maximum number of decimals for the Amount due for payment (BT-115) is 2.</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="/ubl:Invoice/cac:LegalMonetaryTotal/cbc:PayableAmount"/>
   <svrl:fired-rule context="cac:InvoiceLine | cac:CreditNoteLine"/>
   <svrl:fired-rule context="cac:InvoiceLine/cac:Item/cac:StandardItemIdentification/cbc:ID | cac:CreditNoteLine/cac:Item/cac:StandardItemIdentification/cbc:ID"/>
   <svrl:fired-rule context="cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory[normalize-space(cbc:ID) = 'S'][cac:TaxScheme/normalize-space(upper-case(cbc:ID))='GST'] | cac:CreditNoteLine/cac:Item/cac:ClassifiedTaxCategory[normalize-space(cbc:ID) = 'S'][cac:TaxScheme/normalize-space(upper-case(cbc:ID))='GST']"/>
   <svrl:active-pattern id="UBL-syntax"
                        documents="file:///C:/Users/Sunil/CAPSTONE/Class/XML/UBL//EDIFACTINT_INVOIC_1_20130703_1116_6468.ubl"/>
   <svrl:fired-rule context="/ubl:Invoice | /cn:CreditNote"/>
   <svrl:fired-rule context="cac:AccountingSupplierParty/cac:Party"/>
   <svrl:fired-rule context="cac:TaxRepresentativeParty"/>
   <svrl:fired-rule context="cac:Delivery"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:fired-rule context="cac:TaxSubtotal"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:failed-assert location="/Q{urn:oasis:names:specification:ubl:schema:xsd:Invoice-2}Invoice[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}LegalMonetaryTotal[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}TaxInclusiveAmount[1]"
                       flag="fatal"
                       id="UBL-DT-01"
                       test="string-length(substring-after(.,'.'))&lt;=2">
      <svrl:text>[UBL-DT-01]-Amounts shall be decimal up to two fraction digits</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:failed-assert location="/Q{urn:oasis:names:specification:ubl:schema:xsd:Invoice-2}Invoice[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}LegalMonetaryTotal[1]/Q{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}PayableAmount[1]"
                       flag="fatal"
                       id="UBL-DT-01"
                       test="string-length(substring-after(.,'.'))&lt;=2">
      <svrl:text>[UBL-DT-01]-Amounts shall be decimal up to two fraction digits</svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="cac:InvoiceLine | cac:CreditNoteLine"/>
   <svrl:fired-rule context="//*[ends-with(name(), 'Amount') and not(ends-with(name(),'PriceAmount')) and not(ancestor::cac:Price/cac:AllowanceCharge)]"/>
   <svrl:active-pattern id="Codesmodel"
                        documents="file:///C:/Users/Sunil/CAPSTONE/Class/XML/UBL//EDIFACTINT_INVOIC_1_20130703_1116_6468.ubl"/>
   <svrl:fired-rule flag="fatal" context="cbc:InvoiceTypeCode | cbc:CreditNoteTypeCode"/>
   <svrl:fired-rule flag="fatal" context="cbc:DocumentCurrencyCode"/>
   <svrl:fired-rule flag="fatal" context="cbc:EndpointID[@schemeID]"/>
   <svrl:fired-rule flag="fatal" context="cac:Country/cbc:IdentificationCode"/>
   <svrl:fired-rule flag="fatal" context="cac:PartyLegalEntity/cbc:CompanyID[@schemeID]"/>
   <svrl:fired-rule flag="fatal" context="cbc:EndpointID[@schemeID]"/>
   <svrl:fired-rule flag="fatal" context="cac:Country/cbc:IdentificationCode"/>
   <svrl:fired-rule flag="fatal" context="cac:PartyLegalEntity/cbc:CompanyID[@schemeID]"/>
   <svrl:fired-rule flag="fatal" context="cac:Country/cbc:IdentificationCode"/>
   <svrl:fired-rule flag="fatal" context="cac:Country/cbc:IdentificationCode"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal" context="cac:TaxCategory/cbc:ID"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:InvoicedQuantity[@unitCode] | cbc:BaseQuantity[@unitCode] | cbc:CreditedQuantity[@unitCode]"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
   <svrl:fired-rule flag="fatal" context="cac:StandardItemIdentification/cbc:ID[@schemeID]"/>
   <svrl:fired-rule flag="fatal" context="cac:ClassifiedTaxCategory/cbc:ID"/>
   <svrl:fired-rule flag="fatal"
                    context="cbc:Amount | cbc:BaseAmount | cbc:PriceAmount | cbc:TaxAmount | cbc:TaxableAmount | cbc:LineExtensionAmount | cbc:TaxExclusiveAmount | cbc:TaxInclusiveAmount | cbc:AllowanceTotalAmount | cbc:ChargeTotalAmount | cbc:PrepaidAmount | cbc:PayableRoundingAmount | cbc:PayableAmount"/>
</svrl:schematron-output>
